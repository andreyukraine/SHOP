// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AccountBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView logout;

  @NonNull
  public final RelativeLayout logoutLay;

  @NonNull
  public final TextInputEditText mobile;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final SwitchMaterial typeCatalogViews;

  private AccountBinding(@NonNull RelativeLayout rootView, @NonNull TextView logout,
      @NonNull RelativeLayout logoutLay, @NonNull TextInputEditText mobile,
      @NonNull TextInputEditText name, @NonNull SwitchMaterial typeCatalogViews) {
    this.rootView = rootView;
    this.logout = logout;
    this.logoutLay = logoutLay;
    this.mobile = mobile;
    this.name = name;
    this.typeCatalogViews = typeCatalogViews;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AccountBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.logout;
      TextView logout = rootView.findViewById(id);
      if (logout == null) {
        break missingId;
      }

      id = R.id.logoutLay;
      RelativeLayout logoutLay = rootView.findViewById(id);
      if (logoutLay == null) {
        break missingId;
      }

      id = R.id.mobile;
      TextInputEditText mobile = rootView.findViewById(id);
      if (mobile == null) {
        break missingId;
      }

      id = R.id.name;
      TextInputEditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.type_catalog_views;
      SwitchMaterial typeCatalogViews = rootView.findViewById(id);
      if (typeCatalogViews == null) {
        break missingId;
      }

      return new AccountBinding((RelativeLayout) rootView, logout, logoutLay, mobile, name,
          typeCatalogViews);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
