// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.tabs.TabLayout;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ShoppingCartProductsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout botBlock;

  @NonNull
  public final ConstraintLayout bottomBlock;

  @NonNull
  public final LinearLayout cartBlock;

  @NonNull
  public final Button crateOrder;

  @NonNull
  public final RelativeLayout orderPropBlock;

  @NonNull
  public final TextView payableAmtClient;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final TabLayout tabs;

  @NonNull
  public final TextView textPayableAmtClient;

  @NonNull
  public final TextView textStores;

  @NonNull
  public final ToolbarBinding toolbar;

  @NonNull
  public final ConstraintLayout topBlock;

  private ShoppingCartProductsBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout botBlock, @NonNull ConstraintLayout bottomBlock,
      @NonNull LinearLayout cartBlock, @NonNull Button crateOrder,
      @NonNull RelativeLayout orderPropBlock, @NonNull TextView payableAmtClient,
      @NonNull TabLayout tabLayout, @NonNull TabLayout tabs, @NonNull TextView textPayableAmtClient,
      @NonNull TextView textStores, @NonNull ToolbarBinding toolbar,
      @NonNull ConstraintLayout topBlock) {
    this.rootView = rootView;
    this.botBlock = botBlock;
    this.bottomBlock = bottomBlock;
    this.cartBlock = cartBlock;
    this.crateOrder = crateOrder;
    this.orderPropBlock = orderPropBlock;
    this.payableAmtClient = payableAmtClient;
    this.tabLayout = tabLayout;
    this.tabs = tabs;
    this.textPayableAmtClient = textPayableAmtClient;
    this.textStores = textStores;
    this.toolbar = toolbar;
    this.topBlock = topBlock;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ShoppingCartProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ShoppingCartProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.shopping_cart_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ShoppingCartProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bot_block;
      LinearLayout botBlock = rootView.findViewById(id);
      if (botBlock == null) {
        break missingId;
      }

      id = R.id.bottomBlock;
      ConstraintLayout bottomBlock = rootView.findViewById(id);
      if (bottomBlock == null) {
        break missingId;
      }

      id = R.id.cartBlock;
      LinearLayout cartBlock = rootView.findViewById(id);
      if (cartBlock == null) {
        break missingId;
      }

      id = R.id.crateOrder;
      Button crateOrder = rootView.findViewById(id);
      if (crateOrder == null) {
        break missingId;
      }

      RelativeLayout orderPropBlock = (RelativeLayout) rootView;

      id = R.id.payableAmtClient;
      TextView payableAmtClient = rootView.findViewById(id);
      if (payableAmtClient == null) {
        break missingId;
      }

      id = R.id.tabLayout;
      TabLayout tabLayout = rootView.findViewById(id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.tabs;
      TabLayout tabs = rootView.findViewById(id);
      if (tabs == null) {
        break missingId;
      }

      id = R.id.textPayableAmtClient;
      TextView textPayableAmtClient = rootView.findViewById(id);
      if (textPayableAmtClient == null) {
        break missingId;
      }

      id = R.id.textStores;
      TextView textStores = rootView.findViewById(id);
      if (textStores == null) {
        break missingId;
      }

      id = R.id.toolbar;
      View toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }
      ToolbarBinding binding_toolbar = ToolbarBinding.bind(toolbar);

      id = R.id.topBlock;
      ConstraintLayout topBlock = rootView.findViewById(id);
      if (topBlock == null) {
        break missingId;
      }

      return new ShoppingCartProductsBinding((RelativeLayout) rootView, botBlock, bottomBlock,
          cartBlock, crateOrder, orderPropBlock, payableAmtClient, tabLayout, tabs,
          textPayableAmtClient, textStores, binding_toolbar, topBlock);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
