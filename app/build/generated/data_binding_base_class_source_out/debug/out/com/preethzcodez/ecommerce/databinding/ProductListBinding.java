// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TableLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ProductListBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final FrameLayout filterFrame;

  @NonNull
  public final ImageView filterIcon;

  @NonNull
  public final RelativeLayout filterLay;

  @NonNull
  public final GridView productsGrid;

  @NonNull
  public final TableLayout sortFilter;

  @NonNull
  public final ImageView sortIcon;

  @NonNull
  public final RelativeLayout sortLay;

  private ProductListBinding(@NonNull RelativeLayout rootView, @NonNull FrameLayout filterFrame,
      @NonNull ImageView filterIcon, @NonNull RelativeLayout filterLay,
      @NonNull GridView productsGrid, @NonNull TableLayout sortFilter, @NonNull ImageView sortIcon,
      @NonNull RelativeLayout sortLay) {
    this.rootView = rootView;
    this.filterFrame = filterFrame;
    this.filterIcon = filterIcon;
    this.filterLay = filterLay;
    this.productsGrid = productsGrid;
    this.sortFilter = sortFilter;
    this.sortIcon = sortIcon;
    this.sortLay = sortLay;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ProductListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ProductListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.product_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ProductListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.filterFrame;
      FrameLayout filterFrame = rootView.findViewById(id);
      if (filterFrame == null) {
        break missingId;
      }

      id = R.id.filterIcon;
      ImageView filterIcon = rootView.findViewById(id);
      if (filterIcon == null) {
        break missingId;
      }

      id = R.id.filterLay;
      RelativeLayout filterLay = rootView.findViewById(id);
      if (filterLay == null) {
        break missingId;
      }

      id = R.id.productsGrid;
      GridView productsGrid = rootView.findViewById(id);
      if (productsGrid == null) {
        break missingId;
      }

      id = R.id.sortFilter;
      TableLayout sortFilter = rootView.findViewById(id);
      if (sortFilter == null) {
        break missingId;
      }

      id = R.id.sortIcon;
      ImageView sortIcon = rootView.findViewById(id);
      if (sortIcon == null) {
        break missingId;
      }

      id = R.id.sortLay;
      RelativeLayout sortLay = rootView.findViewById(id);
      if (sortLay == null) {
        break missingId;
      }

      return new ProductListBinding((RelativeLayout) rootView, filterFrame, filterIcon, filterLay,
          productsGrid, sortFilter, sortIcon, sortLay);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
