// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ExpandableListView;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FilterlayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final Button apply;

  @NonNull
  public final TableLayout bottomLay;

  @NonNull
  public final Button clear;

  @NonNull
  public final ImageView close;

  @NonNull
  public final ExpandableListView expandableList;

  @NonNull
  public final TextView filterTitle;

  @NonNull
  public final RelativeLayout header;

  private FilterlayoutBinding(@NonNull RelativeLayout rootView, @NonNull Button apply,
      @NonNull TableLayout bottomLay, @NonNull Button clear, @NonNull ImageView close,
      @NonNull ExpandableListView expandableList, @NonNull TextView filterTitle,
      @NonNull RelativeLayout header) {
    this.rootView = rootView;
    this.apply = apply;
    this.bottomLay = bottomLay;
    this.clear = clear;
    this.close = close;
    this.expandableList = expandableList;
    this.filterTitle = filterTitle;
    this.header = header;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FilterlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FilterlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.filterlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FilterlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.apply;
      Button apply = rootView.findViewById(id);
      if (apply == null) {
        break missingId;
      }

      id = R.id.bottomLay;
      TableLayout bottomLay = rootView.findViewById(id);
      if (bottomLay == null) {
        break missingId;
      }

      id = R.id.clear;
      Button clear = rootView.findViewById(id);
      if (clear == null) {
        break missingId;
      }

      id = R.id.close;
      ImageView close = rootView.findViewById(id);
      if (close == null) {
        break missingId;
      }

      id = R.id.expandableList;
      ExpandableListView expandableList = rootView.findViewById(id);
      if (expandableList == null) {
        break missingId;
      }

      id = R.id.filterTitle;
      TextView filterTitle = rootView.findViewById(id);
      if (filterTitle == null) {
        break missingId;
      }

      id = R.id.header;
      RelativeLayout header = rootView.findViewById(id);
      if (header == null) {
        break missingId;
      }

      return new FilterlayoutBinding((RelativeLayout) rootView, apply, bottomLay, clear, close,
          expandableList, filterTitle, header);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
