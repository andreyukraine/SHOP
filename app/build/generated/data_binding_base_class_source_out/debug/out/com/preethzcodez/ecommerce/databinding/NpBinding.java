// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.Button;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final AutoCompleteTextView autocompleteCity;

  @NonNull
  public final AutoCompleteTextView autocompletePoint;

  @NonNull
  public final Button btnOk;

  @NonNull
  public final TextView cityText;

  @NonNull
  public final Button clearCity;

  @NonNull
  public final Button clearPoint;

  @NonNull
  public final TextView countPoint;

  @NonNull
  public final TextView pointText;

  private NpBinding(@NonNull RelativeLayout rootView,
      @NonNull AutoCompleteTextView autocompleteCity,
      @NonNull AutoCompleteTextView autocompletePoint, @NonNull Button btnOk,
      @NonNull TextView cityText, @NonNull Button clearCity, @NonNull Button clearPoint,
      @NonNull TextView countPoint, @NonNull TextView pointText) {
    this.rootView = rootView;
    this.autocompleteCity = autocompleteCity;
    this.autocompletePoint = autocompletePoint;
    this.btnOk = btnOk;
    this.cityText = cityText;
    this.clearCity = clearCity;
    this.clearPoint = clearPoint;
    this.countPoint = countPoint;
    this.pointText = pointText;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NpBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.np, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autocomplete_city;
      AutoCompleteTextView autocompleteCity = rootView.findViewById(id);
      if (autocompleteCity == null) {
        break missingId;
      }

      id = R.id.autocomplete_point;
      AutoCompleteTextView autocompletePoint = rootView.findViewById(id);
      if (autocompletePoint == null) {
        break missingId;
      }

      id = R.id.btnOk;
      Button btnOk = rootView.findViewById(id);
      if (btnOk == null) {
        break missingId;
      }

      id = R.id.cityText;
      TextView cityText = rootView.findViewById(id);
      if (cityText == null) {
        break missingId;
      }

      id = R.id.clearCity;
      Button clearCity = rootView.findViewById(id);
      if (clearCity == null) {
        break missingId;
      }

      id = R.id.clearPoint;
      Button clearPoint = rootView.findViewById(id);
      if (clearPoint == null) {
        break missingId;
      }

      id = R.id.countPoint;
      TextView countPoint = rootView.findViewById(id);
      if (countPoint == null) {
        break missingId;
      }

      id = R.id.pointText;
      TextView pointText = rootView.findViewById(id);
      if (pointText == null) {
        break missingId;
      }

      return new NpBinding((RelativeLayout) rootView, autocompleteCity, autocompletePoint, btnOk,
          cityText, clearCity, clearPoint, countPoint, pointText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
