// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ClientGridItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView address;

  @NonNull
  public final TextView addressText;

  @NonNull
  public final TextView debt;

  @NonNull
  public final RelativeLayout itemLay;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView percent;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Switch switchClient;

  @NonNull
  public final TextView textViewOptions;

  @NonNull
  public final TextView typePrice;

  private ClientGridItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView address,
      @NonNull TextView addressText, @NonNull TextView debt, @NonNull RelativeLayout itemLay,
      @NonNull TextView name, @NonNull TextView percent, @NonNull ProgressBar progressBar,
      @NonNull Switch switchClient, @NonNull TextView textViewOptions,
      @NonNull TextView typePrice) {
    this.rootView = rootView;
    this.address = address;
    this.addressText = addressText;
    this.debt = debt;
    this.itemLay = itemLay;
    this.name = name;
    this.percent = percent;
    this.progressBar = progressBar;
    this.switchClient = switchClient;
    this.textViewOptions = textViewOptions;
    this.typePrice = typePrice;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ClientGridItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ClientGridItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.client_grid_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ClientGridItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.address;
      TextView address = rootView.findViewById(id);
      if (address == null) {
        break missingId;
      }

      id = R.id.addressText;
      TextView addressText = rootView.findViewById(id);
      if (addressText == null) {
        break missingId;
      }

      id = R.id.debt;
      TextView debt = rootView.findViewById(id);
      if (debt == null) {
        break missingId;
      }

      RelativeLayout itemLay = (RelativeLayout) rootView;

      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = rootView.findViewById(id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.switch_client;
      Switch switchClient = rootView.findViewById(id);
      if (switchClient == null) {
        break missingId;
      }

      id = R.id.textViewOptions;
      TextView textViewOptions = rootView.findViewById(id);
      if (textViewOptions == null) {
        break missingId;
      }

      id = R.id.typePrice;
      TextView typePrice = rootView.findViewById(id);
      if (typePrice == null) {
        break missingId;
      }

      return new ClientGridItemBinding((RelativeLayout) rootView, address, addressText, debt,
          itemLay, name, percent, progressBar, switchClient, textViewOptions, typePrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
