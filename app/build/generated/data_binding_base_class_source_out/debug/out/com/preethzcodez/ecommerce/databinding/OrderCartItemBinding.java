// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderCartItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView countText;

  @NonNull
  public final TextView countValue;

  @NonNull
  public final TextView countValue1C;

  @NonNull
  public final ImageView img;

  @NonNull
  public final RelativeLayout itemLay;

  @NonNull
  public final TextView options;

  @NonNull
  public final TextView percent;

  @NonNull
  public final TextView priceClient;

  @NonNull
  public final TextView priceClientTotal;

  @NonNull
  public final TextView title;

  private OrderCartItemBinding(@NonNull RelativeLayout rootView, @NonNull TextView countText,
      @NonNull TextView countValue, @NonNull TextView countValue1C, @NonNull ImageView img,
      @NonNull RelativeLayout itemLay, @NonNull TextView options, @NonNull TextView percent,
      @NonNull TextView priceClient, @NonNull TextView priceClientTotal, @NonNull TextView title) {
    this.rootView = rootView;
    this.countText = countText;
    this.countValue = countValue;
    this.countValue1C = countValue1C;
    this.img = img;
    this.itemLay = itemLay;
    this.options = options;
    this.percent = percent;
    this.priceClient = priceClient;
    this.priceClientTotal = priceClientTotal;
    this.title = title;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderCartItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderCartItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.order_cart_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderCartItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.countText;
      TextView countText = rootView.findViewById(id);
      if (countText == null) {
        break missingId;
      }

      id = R.id.countValue;
      TextView countValue = rootView.findViewById(id);
      if (countValue == null) {
        break missingId;
      }

      id = R.id.countValue1C;
      TextView countValue1C = rootView.findViewById(id);
      if (countValue1C == null) {
        break missingId;
      }

      id = R.id.img;
      ImageView img = rootView.findViewById(id);
      if (img == null) {
        break missingId;
      }

      id = R.id.itemLay;
      RelativeLayout itemLay = rootView.findViewById(id);
      if (itemLay == null) {
        break missingId;
      }

      id = R.id.options;
      TextView options = rootView.findViewById(id);
      if (options == null) {
        break missingId;
      }

      id = R.id.percent;
      TextView percent = rootView.findViewById(id);
      if (percent == null) {
        break missingId;
      }

      id = R.id.priceClient;
      TextView priceClient = rootView.findViewById(id);
      if (priceClient == null) {
        break missingId;
      }

      id = R.id.priceClientTotal;
      TextView priceClientTotal = rootView.findViewById(id);
      if (priceClientTotal == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      return new OrderCartItemBinding((RelativeLayout) rootView, countText, countValue,
          countValue1C, img, itemLay, options, percent, priceClient, priceClientTotal, title);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
