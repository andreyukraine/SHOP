// Generated by view binder compiler. Do not edit!
package com.preethzcodez.ecommerce.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.preethzcodez.ecommerce.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SignInBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView imgLogo;

  @NonNull
  public final LinearLayout inputBlock;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText password;

  @NonNull
  public final ImageView showpassword;

  @NonNull
  public final Button signIn;

  private SignInBinding(@NonNull RelativeLayout rootView, @NonNull ImageView imgLogo,
      @NonNull LinearLayout inputBlock, @NonNull EditText name, @NonNull EditText password,
      @NonNull ImageView showpassword, @NonNull Button signIn) {
    this.rootView = rootView;
    this.imgLogo = imgLogo;
    this.inputBlock = inputBlock;
    this.name = name;
    this.password = password;
    this.showpassword = showpassword;
    this.signIn = signIn;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SignInBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SignInBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.sign_in, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SignInBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.img_logo;
      ImageView imgLogo = rootView.findViewById(id);
      if (imgLogo == null) {
        break missingId;
      }

      id = R.id.input_block;
      LinearLayout inputBlock = rootView.findViewById(id);
      if (inputBlock == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = rootView.findViewById(id);
      if (password == null) {
        break missingId;
      }

      id = R.id.showpassword;
      ImageView showpassword = rootView.findViewById(id);
      if (showpassword == null) {
        break missingId;
      }

      id = R.id.signIn;
      Button signIn = rootView.findViewById(id);
      if (signIn == null) {
        break missingId;
      }

      return new SignInBinding((RelativeLayout) rootView, imgLogo, inputBlock, name, password,
          showpassword, signIn);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
